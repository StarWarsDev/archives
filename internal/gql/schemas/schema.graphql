schema {
    query: Query
}

interface Card {
    id: ID!
    name: String!
    cardType: String!
    cardSubType: String!
    requirements: [String!]!
    keywords: [String!]!
    icon: String!
    image: String!
}

type Unit implements Card {
	id: ID!
	name: String!
    cardType: String!
    cardSubType: String!
    icon: String!
    image: String!
    requirements: [String!]!
    unique: Boolean
    cost: Int!
    rank: String!
    faction: String!
    slots: [String!]!
    keywords: [String!]!
    commandCards: [Command!]!
}

type Upgrade implements Card {
    id: ID!
    cardType: String!
    cardSubType: String!
    name: String!
    requirements: [String!]!
    icon: String!
    image: String!
    unique: Boolean
    cost: Int!
    keywords: [String!]!
}

type Command implements Card {
    id: ID!
    cardType: String!
    cardSubType: String!
    name: String!
    requirements: [String!]!
    icon: String!
    image: String!
    commander: String
    faction: String
    keywords: [String!]!
    pips: Int!
}

type Keyword {
    name: String!
    description: String!
}

type Query {
    command(id: ID!): Command!
    commands(query: String): [Command!]!
    keyword(name: String!): Keyword!
    keywords(query: String): [Keyword!]!
    unit(id: ID!): Unit!
	units(query: String): [Unit!]!
    upgrade(id: ID!): Upgrade!
    upgrades(query: String): [Upgrade!]!
}